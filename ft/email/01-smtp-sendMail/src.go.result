// Issue 266
// Using untrusted input to construct an email is security sensitive.
// Warning will be given.

package main

import (
	"net/http"
	"net/smtp"
)

func mailHandler(w http.ResponseWriter, r *http.Request) {
	host := r.Header.Get("Host")
	token := "some_generated_token"
	body := "Click to reset password: " + host + "/" + token
	// OpenRefactory Warning:
	// Possible Email injection!
	// Path:
	//	File: src.go, Line: 13
	//		host := r.Header.Get("Host")
	//		Variable 'host' is assigned a tainted value from an external source.
	//	File: src.go, Line: 14
	//		token := "some_generated_token"
	//		Variable 'token' is assigned a tainted value.
	//	File: src.go, Line: 15
	//		body := "Click to reset password: " + host + "/" + token
	//		Variable 'body' is assigned a tainted value.
	//	File: src.go, Line: 16
	//		smtp.SendMail("test.test", nil, "from@from.com", nil, []byte(body))
	//		Tainted information is passed through a function call and is used in a sink.
	smtp.SendMail("test.test", nil, "from@from.com", nil, []byte(body))
}
