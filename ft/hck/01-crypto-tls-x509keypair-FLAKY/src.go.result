// Issue 89
// Should avoid Passing hard coded credential into tls.X509KeyPair
// Flaky test
// Taint trace message sometimes indicates that taint is coming from certPEM,
// sometimes indicates keyPEM as taint source.

package main

import (
	"crypto/tls"
	"fmt"
	"log"
)

func main() {
	// Load the hard-coded certificate
	certPEM := []byte(`-----BEGIN CERTIFICATE-----
MIIC+zCCAeOgAwIBAgIULG+L6g2nrlU+jJ6UxMR6UkmUV6owDQYJKoZIhvcNAQEL
BQAwDTELMAkGA1UEAxMCVGVzdDAeFw0yMDEyMjgxNjE3MTdaFw0zMDA4MjgxNjE3
MTdaMA0xCzAJBgNVBAMTAkVFMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEzKpS
kmllGn8mHlL4m4sEjKDFC2e3qz/9D2UP7osOXcmZiKTyNpOOtSpL29NcN/xfljKg
FFVsjW9BvZ7VJfhwOqM7MDUGA1UdEQQqMCiCEG15LmV4YW1wbGUuY29tMAoGCCqG
SM49BAMCA0gAMEUCIQC6A0UfW8zvR9Ih5eVWTnfYiwyWq3v2N5N5cSKtg8WRAQIg
fM0bBQoO3f0q0yLzBtswltRt+99x+xWp7E/hMGltgMI=
-----END CERTIFICATE-----`)
	keyPEM := []byte(`-----BEGIN PRIVATE KEY-----
MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgUwukxU6jIyoZZZ1U
uoC8W9S0QQvfehNc7NFnLTr8WFKhRANCAATMqlKaWUafyYeUviY7iwSMoMULZ7er
P/0PZQ/uiw5dyZmIpPI2k4661Kkvb01w3/F+WMqAUVWyNb0G9ntUl+HA
-----END PRIVATE KEY-----`)

	// OpenRefactory Warning:
	// Possible Hard Coded Key!
	// Path:
	//	File: src.go, Line: 14
	//		certPEM := []byte(`-----BEGIN CERTIFICATE-----
	//		Variable 'certPEM' is assigned a tainted value which is passed through a function call.
	//	File: src.go, Line: 29
	//		tls.X509KeyPair(certPEM, keyPEM)
	//		Tainted information is used in a sink.
	cert, err := tls.X509KeyPair(certPEM, keyPEM)
	if err != nil {
		log.Fatal(err)
	}
	fmt.Print(cert)
}
