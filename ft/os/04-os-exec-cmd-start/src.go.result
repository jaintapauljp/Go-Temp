// Issue 89
// Passing tainted data into exec.Command.
// Warning should be generated.

package testdata

import (
	"net/http"
	"os/exec"
)

func handler(w http.ResponseWriter, req *http.Request) {
	cmdName := req.URL.Query().Get("cmd")
	cmd := exec.Command(cmdName)
	// OpenRefactory Warning:
	// Possible OS command injection!
	// Path:
	//	File: src.go, Line: 13
	//		cmdName := req.URL.Query().Get("cmd")
	//		Variable 'cmdName' is assigned a tainted value.
	//	File: src.go, Line: 14
	//		cmd := exec.Command(cmdName)
	//		Variable 'cmd' is assigned a tainted value which is passed through a function call.
	//	File: src.go, Line: 15
	//		cmd.Start()
	//		Tainted information is used in a sink.
	cmd.Start()
}

func main() {
	http.HandleFunc("/", handler)
	http.ListenAndServe(":8090", nil)
}
