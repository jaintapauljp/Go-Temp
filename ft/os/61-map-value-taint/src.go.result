// Issue 126
// Passing tainted data via map value

package main

import (
	"net/http"
	"os/exec"
)

func HandleReq(req *http.Request) {
	vals := req.URL.Query()
	cmdName := vals.Get("cmd")
	ss := make(map[string]string)
	ss["command"] = cmdName
	cmd := exec.Command(ss["command"])
	// OpenRefactory Warning:
	// Possible OS command injection!
	// Path:
	//	File: src.go, Line: 12
	//		vals := req.URL.Query()
	//		Variable 'vals' is assigned a tainted value from an external source.
	//	File: src.go, Line: 13
	//		cmdName := vals.Get("cmd")
	//		Variable 'cmdName' is assigned a tainted value which is passed through a function call.
	//	File: src.go, Line: 15
	//		ss["command"] = cmdName
	//		Variable 'ss["command"]' is assigned a tainted value.
	//	File: src.go, Line: 16
	//		cmd := exec.Command(ss["command"])
	//		Variable 'cmd' is assigned a tainted value which is passed through a function call.
	//	File: src.go, Line: 17
	//		cmd.Run()
	//		Tainted information is used in a sink.
	cmd.Run()
}
